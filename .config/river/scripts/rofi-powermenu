#!/bin/lua

local theme = "$HOME/.config/rofi/powermenu.rasi"
local confirm_theme = "$HOME/.config/rofi/confirm.rasi"

local uptime_cmd = "$(uptime -p |\
    awk '{print $2,$3}' |\
    awk -F, '{print $1}' |\
    sed 's/minute/min/')"

local prompt = "$(whoami)@$(hostname): up " .. uptime_cmd
local message = "Session: $DESKTOP_SESSION"

-- not using key value table so that the order of options is kept
local options = {
    {
        opt = "Logout",
        cmd = "riverctl exit"
    },
    {
        opt = "Suspend",
        cmd = "systemctl suspend"
    },
    {
        opt = "Hibernate",
        cmd = "systemctl hibernate"
    },
    {
        opt = "Hybrid sleep",
        cmd = "systemctl hybrid-sleep"
    },
    {
        opt = "Reboot",
        cmd = "systemctl reboot"
    },
    {
        opt = "Poweroff",
        cmd = "systemctl poweroff"
    }
}

local command = require("command")

-- concatenate option names
local opts = {}
for i, entry in ipairs(options) do
    opts[i] = entry.opt
end

local echo = string.format("printf '%s'", table.concat(opts, "\n"))
local rofi_cmd = string.format(
    "rofi -monitor -1 -dmenu -p \"%s\" -mesg \"%s\" -theme %s",
    prompt, message, theme
)

-- run rofi and pass options
local selected = command.capture(echo .. "|" .. rofi_cmd)

-- find selected pair
for _, entry in ipairs(options) do
    if entry.opt == selected then
        local confirm = command.capture(string.format(
            "printf 'Yes\nNo' | rofi -monitor -1 -dmenu -p 'Confirm' -mesg '%s?' -theme %s",
            entry.opt, confirm_theme
        ))

        if confirm == "Yes" then
            os.execute(entry.cmd)
        end

        break
    end
end
